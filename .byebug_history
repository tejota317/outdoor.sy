continue
exit
pp customers[0]
puts customers[0].inspect
puts customers[0]
customers[0].each
customers[0].full_name
customers[0]
customers[0].inspect
customers[0].attributes
customers[0].attrs
customers[0]
customers
next
customers
next
continue
exit
Customer
exit
Customer
continue
next
sort_by.to_sym
sort_by
customer_array[0][:vehicle_type]
next
continue
customer_array[0][:vehicle_type]
customer_array[0]["vehicle_type"]
customer_array[0]
next
sort_by
next
continue
next
customer_array
next
sort_by.nil?
customer_array
next
arr_array
next
file_str
next
sort_by
next
continue
args[:path_to_file]
args[:sort_by]
args[0]
args.sort_by
sort_by
next
file_path
next
continue
Customer
continue
eval("@customers.first.#{params[:customer_list][:sort]}")
eval("customers.first.#{params[:customer_list][:sort]}")
eval("customer.#{params[:customer_list][:sort]}")
@customers.sort_by{|customer| eval("customer.#{params[:customer_list][:sort]}")}
@customers
@customer.sort_by{|customer| eval("customer.#{params[:customer_list][:sort]}")}
continue
@customer
@customer.sort_by{|customer| eval("customer.#{params[:customer_list][:sort]}")}
@customer.sort_by{|customer| customer."#{params[:customer_list][:sort]}"}
@customer.sort_by{}
params[:customer_list][:sort]
continue
params["sort"]
params[:sort]
params
params[:sort_by]
@customers
continue
conitnue
@customers.sort_by{|customer| customer.vehicle_type.downcase}
@customers
@customers.sort_by{|customer| customer.vehicle_type.downcase}
@customers
exit
arr_array = arr.map{|str| str.split(/[\|,]/)}
  arr = str.split("\n")
str = File.read(params[:customer_list][:file])
params[:customer_list][:file].extension_type
params[:customer_list][:file].extension
params[:customer_list][:file]
params[:customer_list][:file].name
params[:customer_list][:file][:name]
params[:customer_list].keys
File.read(params[:customer_list][:file])
File.read(params[:customer_list])
params[:customer_list]
params
